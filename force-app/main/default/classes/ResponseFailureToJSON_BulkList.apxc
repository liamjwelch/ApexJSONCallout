//Class for handling batch retries from record list view in SF
public class ResponseFailureToJSON_BulkList {
    
    //Method called by the flow that receives a list of Response Failure Objects from flow
    //Queries relevant data for transmission to endpoint
    @InvocableMethod(label='ResponseFailureToJSON_BulkList' description='Test pinging external service.')
    public static void calloutMethod(List<Response_Failure__c> RFSelectedRecs){
        try {
            System.debug('TESTING THE ELEMENTS OF RESPONSE FAILURES LIST: ' + RFSelectedRecs);
            for (Response_Failure__c rf : RFSelectedRecs) {
                String detailsToPost = rf.Reponse_Details__c;
                //System.debug('TESTING THE DETAILS WE ARE GOING TO POST ITERATIVELY ' + detailsToPost);
                ResponseFailureToJSON.retryJSON(detailsToPost);
            }
        } catch (QueryException e) {
            System.debug(e.getMessage());    
        }
    }
    
    @future(callout=true)
    public static void retryJSON(String postInformation) {
        try {
            Http http = new Http();
            HttpRequest request = new HttpRequest();
            request.setEndpoint('https://enu0r5w2zt5vj6l.m.pipedream.net');
            request.setMethod('POST');
            request.setHeader('Content-Type', 'application/json;charset=UTF-8');
            // Set the body as a JSON object
            request.setBody(postInformation);
            HttpResponse response = http.send(request);
            //UPDATE CONDITION?
            if(response.getStatusCode() == 200 || response.getStatusCode() == 201) {
                //INSERT RESPONSE_SUCCESS OBJECT
                String details = response.getBody() + ' ' + postInformation;
                System.debug('Request success... status == ' + response.getStatusCode() + ' ' + response.getStatus());
            } else {
                String details = response.getBody() + ' ' + postInformation;
                System.debug('Request failure... status == ' + response.getBody());
            }
        } catch (CalloutException e) {
            System.debug(e.getMessage());  
        }
    }
    
}